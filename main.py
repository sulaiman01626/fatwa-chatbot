import google.generativeai as genai
import sqlite3
from fastapi import FastAPI, Request
from fastapi.responses import JSONResponse
import uvicorn

app = FastAPI()

# Gemini API ржХржиржлрж┐ржЧрж╛рж░
genai.configure(api_key="YOUR_API_KEY")  # тЖР рждрзЛржорж╛рж░ API Key ржмрж╕рж╛ржУ
model = genai.GenerativeModel(model_name="models/gemini-1.5-flash")

# Gemini ржерзЗржХрзЗ ржЙрждрзНрждрж░ ржЖржирж╛рж░ ржлрж╛ржВрж╢ржи
def ask_gemini(question):
    prompt = f"""рждрзБржорж┐ ржПржХржЬржи ржЗрж╕рж▓рж╛ржорж┐ржХ ржорзБржлрждрж┐ред рж╢рж░рж┐ржпрж╝рждрзЗрж░ ржЖрж▓рзЛржХрзЗ рж╕ржВржХрзНрж╖рж┐ржкрзНржд ржУ рж╕рж╣ржЬ ржнрж╛рж╖рж╛ржпрж╝ ржЙрждрзНрждрж░ ржжрж╛ржУред

ржкрзНрж░рж╢рзНржи: {question}

ржЙрждрзНрждрж░:"""
    response = model.generate_content(prompt)
    return response.text.strip()

# ржкрзНрж░рж╢рзНржи ржбрж╛ржЯрж╛ржмрзЗржЬрзЗ ржЦрзЛржБржЬрж╛, ржирж╛ ржкрзЗрж▓рзЗ Gemini ржХрзЗ ржЬрж┐ржЬрзНржЮрж╛рж╕рж╛
def get_fatwa_answer(question):
    conn = sqlite3.connect("fatwa.db")
    cursor = conn.cursor()

    cursor.execute("SELECT answer FROM Fatwa WHERE question LIKE ?", ('%' + question + '%',))
    result = cursor.fetchone()
    conn.close()

    if result:
        return "ЁЯУШ ржбрж╛ржЯрж╛ржмрзЗрж╕ ржерзЗржХрзЗ:\n" + result[0]
    else:
        return "ЁЯдЦ Gemini ржерзЗржХрзЗ:\n" + ask_gemini(question)

@app.post("/ask")
async def ask_fatwa(request: Request):
    data = await request.json()
    question = data.get("question", "")
    if not question:
        return JSONResponse({"error": "ржкрзНрж░рж╢рзНржи ржкрж╛ржУржпрж╝рж╛ ржпрж╛ржпрж╝ржирж┐"}, status_code=400)
    answer = get_fatwa_answer(question)
    return {"answer": answer}
